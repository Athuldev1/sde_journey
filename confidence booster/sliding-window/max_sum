"""
Maximum Sum of K Consecutive Elements
Given an integer array nums and an integer k, return the maximum sum of any contiguous subarray of size k.

Example:

Input: nums = [2,1,5,1,3,2], k = 3
Output: 9
Explanation: Subarray [5,1,3] has the maximum sum = 9

Constraints:

1 <= len(nums) <= 10^5
1 <= k <= len(nums)
-10^4 <= nums[i] <= 10^4

"""
def max_sum_k_elements(nums, k):
    n = len(nums)
    if k > n or k <= 0: # Added check for invalid k
        return 0
    # First window sum
    curr_win_sum = sum(nums[:k])
    max_sum = curr_win_sum
    
    for i in range(k, n):
        curr_win_sum += nums[i] - nums[i-k]
        max_sum = max(max_sum, curr_win_sum)
    return max_sum


nums = [2,1,5,1,3,2]
k = 3
print(max_sum_k_elements(nums=nums, k=k))